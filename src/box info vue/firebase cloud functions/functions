cloud Functions for Firebase is a serverless framework that lets you
 automatically run backend code in response to events triggered by Firebase features and HTTPS requests.
 Your JavaScript or TypeScript code is stored in Google's cloud and runs in a managed environment.
 There's no need to manage and scale your own servers.

 1-
 first we need to see that the back side are working
 so we use "ping" request to server
 and expecting to get response of "pong"

 ping pong example:

 exports.ping = functions.https.onRequest((request, response) => {
   functions.logger.info("Hello logs! pong", {structuredData: true});
   response.send("pong");
 });

2-
 example code for function:

 // Listens for new messages added to /messages/:documentId/original and creates an
 // uppercase version of the message to /messages/:documentId/uppercase
 exports.makeUppercase = functions.firestore.document('/messages/{documentId}')
     .onCreate((snap, context) => {
       // Grab the current value of what was written to Firestore.
       const original = snap.data().original;

       // Access the parameter `{documentId}` with `context.params`
       functions.logger.log('Uppercasing', context.params.documentId, original);

       const uppercase = original.toUpperCase();

       // You must return a Promise when performing asynchronous tasks inside a Functions such as
       // writing to Firestore.
       // Setting an 'uppercase' field in Firestore document returns a Promise.
       return snap.ref.set({uppercase}, {merge: true});
     });


 -we put in cloud functions some functions that we dont want to  changed or use by our users.
 :todo coming soon...